<p id="notice"><%= notice %></p>
<center>
<%= image_tag("logo2.png", height: 175, width:700 ,:alt => "rss feed") %>
</center>
<center>
<h1 color="red">
  <a href="" class="typewrite" data-period="2000" data-type='[ "Hi, Welcome to Tech Forum", "Lets Create a bridge between knowledge and Passion", "Lets Converse..", "Open up your Mind" ]'>
    <span class="wrap"></span>
  </a>
</h1>
</center>


<% if @questions.blank? %>
  <h4>There are no questions containing the term <%= params[:search] %></h4>
<% end %>                            
    

<div class="container">
    <table class="table table-hover  table-responsive">
     <thead>
    <th>Topics</th>
    <th>Votes</th>
    <th>Users</th>
    <th>Replies</th>
    <th>Views</th>
    <th>Activity</th>
    </thead>
<% @questions.each do |question| %>
<div class="container">
<%if question.acc==true%>
    <tr>
    <td><%= link_to question.tile.html_safe, question %></td>
        <td><div class="btn-group">
        <%= link_to like_question_path(question), method: :put, class: "btn btn-default btn-sm" do %>
        <span class="glyphicon glyphicon-chevron-up"></span>
        Upvote
        <%= question.get_upvotes.size %>
        <% end %>
        <%= link_to dislike_question_path(question), method: :put, class: "btn btn-default btn-sm" do %>
        <span class="glyphicon glyphicon-chevron-down">
            Downvote
            <%= question.get_downvotes.size %>
            <% end %>
            </br>
            </br>
        </div>
        </div>
    </div>

        </td>
  
    </td>
        <td><%=question.student.stuname%>
        </td>
        <td><%= question.comments.count %></td>
         <td><%= question.impressionist_count %></td>
        <td><%= time_ago_in_words(question.created_at) %> ago </td> 
        </tr>    
            
  </h2>
            </div>
            <br>
            </div>

            <%end%>
            <%end%>
            </table>


<style>
h1
{
    color:yellow;
}
/*body {
  color:black;
  
}*/

/** { color:black; text-decoration: none;}*/
</style>
<script type="text/javascript">
    

var TxtType = function(el, toRotate, period) {
        this.toRotate = toRotate;
        this.el = el;
        this.loopNum = 0;
        this.period = parseInt(period, 10) || 2000;
        this.txt = '';
        this.tick();
        this.isDeleting = false;
    };

    TxtType.prototype.tick = function() {
        var i = this.loopNum % this.toRotate.length;
        var fullTxt = this.toRotate[i];

        if (this.isDeleting) {
        this.txt = fullTxt.substring(0, this.txt.length - 1);
        } else {
        this.txt = fullTxt.substring(0, this.txt.length + 1);
        }

        this.el.innerHTML = '<span class="wrap">'+this.txt+'</span>';

        var that = this;
        var delta = 200 - Math.random() * 100;

        if (this.isDeleting) { delta /= 2; }

        if (!this.isDeleting && this.txt === fullTxt) {
        delta = this.period;
        this.isDeleting = true;
        } else if (this.isDeleting && this.txt === '') {
        this.isDeleting = false;
        this.loopNum++;
        delta = 500;
        }

        setTimeout(function() {
        that.tick();
        }, delta);
    };

    window.onload = function() {
        var elements = document.getElementsByClassName('typewrite');
        for (var i=0; i<elements.length; i++) {
            var toRotate = elements[i].getAttribute('data-type');
            var period = elements[i].getAttribute('data-period');
            if (toRotate) {
              new TxtType(elements[i], JSON.parse(toRotate), period);
            }
        }
        // INJECT CSS
        var css = document.createElement("style");
        css.type = "text/css";
        css.innerHTML = ".typewrite > .wrap { border-right: 0.08em solid #fff}";
        document.body.appendChild(css);
    };


</script>